name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '.go-version'
          
      - name: Build
        run: make build

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '.go-version'
          
      - name: Test
        run: make test

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '.go-version'
          
      - name: lint-go
        uses: golangci/golangci-lint-action@v6.1.0
        with:
          version: latest

  artifacts-container-image:
    name: Artifacts-Container-Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Gather build metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest = false
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=oci, dest=image.tar
      
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: Kube-Pod-Autocomplete-Image
          path: image.tar

  artifacts-binary:
    name: Artifacts-Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '.go-version'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --skip=publish --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: Kube-Pod-Autocomplete-Binary
          path: build/dist

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '.go-version'

      - name: Run E2E tests
        run: make test-e2e
